<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.infect.backend.dao.NationDao">
  <resultMap id="BaseResultMap" type="com.infect.backend.model.NationPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="modifyTime" jdbcType="BIGINT" property="modifytime" />
    <result column="currentConfirmedCount" jdbcType="INTEGER" property="currentconfirmedcount" />
    <result column="confirmedCount" jdbcType="INTEGER" property="confirmedcount" />
    <result column="suspectedCount" jdbcType="INTEGER" property="suspectedcount" />
    <result column="curedCount" jdbcType="INTEGER" property="curedcount" />
    <result column="deadCount" jdbcType="INTEGER" property="deadcount" />
    <result column="seriousCount" jdbcType="INTEGER" property="seriouscount" />
    <result column="suspectedIncr" jdbcType="INTEGER" property="suspectedincr" />
    <result column="currentConfirmedIncr" jdbcType="INTEGER" property="currentconfirmedincr" />
    <result column="confirmedIncr" jdbcType="INTEGER" property="confirmedincr" />
    <result column="curedIncr" jdbcType="INTEGER" property="curedincr" />
    <result column="deadIncr" jdbcType="INTEGER" property="deadincr" />
    <result column="seriousIncr" jdbcType="INTEGER" property="seriousincr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, modifyTime, currentConfirmedCount, confirmedCount, suspectedCount, curedCount,
    deadCount, seriousCount, suspectedIncr, currentConfirmedIncr, confirmedIncr, curedIncr,
    deadIncr, seriousIncr
  </sql>
  <select id="selectByExample" parameterType="com.infect.backend.model.NationPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from nation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.infect.backend.model.NationPOExample">
    delete from nation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.infect.backend.model.NationPO" useGeneratedKeys="true">
    insert into nation (modifyTime, currentConfirmedCount,
      confirmedCount, suspectedCount, curedCount,
      deadCount, seriousCount, suspectedIncr,
      currentConfirmedIncr, confirmedIncr, curedIncr,
      deadIncr, seriousIncr)
    values (#{modifytime,jdbcType=BIGINT}, #{currentconfirmedcount,jdbcType=INTEGER},
      #{confirmedcount,jdbcType=INTEGER}, #{suspectedcount,jdbcType=INTEGER}, #{curedcount,jdbcType=INTEGER},
      #{deadcount,jdbcType=INTEGER}, #{seriouscount,jdbcType=INTEGER}, #{suspectedincr,jdbcType=INTEGER},
      #{currentconfirmedincr,jdbcType=INTEGER}, #{confirmedincr,jdbcType=INTEGER}, #{curedincr,jdbcType=INTEGER},
      #{deadincr,jdbcType=INTEGER}, #{seriousincr,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.infect.backend.model.NationPO" useGeneratedKeys="true">
    insert into nation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="modifytime != null">
        modifyTime,
      </if>
      <if test="currentconfirmedcount != null">
        currentConfirmedCount,
      </if>
      <if test="confirmedcount != null">
        confirmedCount,
      </if>
      <if test="suspectedcount != null">
        suspectedCount,
      </if>
      <if test="curedcount != null">
        curedCount,
      </if>
      <if test="deadcount != null">
        deadCount,
      </if>
      <if test="seriouscount != null">
        seriousCount,
      </if>
      <if test="suspectedincr != null">
        suspectedIncr,
      </if>
      <if test="currentconfirmedincr != null">
        currentConfirmedIncr,
      </if>
      <if test="confirmedincr != null">
        confirmedIncr,
      </if>
      <if test="curedincr != null">
        curedIncr,
      </if>
      <if test="deadincr != null">
        deadIncr,
      </if>
      <if test="seriousincr != null">
        seriousIncr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="modifytime != null">
        #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="currentconfirmedcount != null">
        #{currentconfirmedcount,jdbcType=INTEGER},
      </if>
      <if test="confirmedcount != null">
        #{confirmedcount,jdbcType=INTEGER},
      </if>
      <if test="suspectedcount != null">
        #{suspectedcount,jdbcType=INTEGER},
      </if>
      <if test="curedcount != null">
        #{curedcount,jdbcType=INTEGER},
      </if>
      <if test="deadcount != null">
        #{deadcount,jdbcType=INTEGER},
      </if>
      <if test="seriouscount != null">
        #{seriouscount,jdbcType=INTEGER},
      </if>
      <if test="suspectedincr != null">
        #{suspectedincr,jdbcType=INTEGER},
      </if>
      <if test="currentconfirmedincr != null">
        #{currentconfirmedincr,jdbcType=INTEGER},
      </if>
      <if test="confirmedincr != null">
        #{confirmedincr,jdbcType=INTEGER},
      </if>
      <if test="curedincr != null">
        #{curedincr,jdbcType=INTEGER},
      </if>
      <if test="deadincr != null">
        #{deadincr,jdbcType=INTEGER},
      </if>
      <if test="seriousincr != null">
        #{seriousincr,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.infect.backend.model.NationPOExample" resultType="java.lang.Long">
    select count(*) from nation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.modifytime != null">
        modifyTime = #{record.modifytime,jdbcType=BIGINT},
      </if>
      <if test="record.currentconfirmedcount != null">
        currentConfirmedCount = #{record.currentconfirmedcount,jdbcType=INTEGER},
      </if>
      <if test="record.confirmedcount != null">
        confirmedCount = #{record.confirmedcount,jdbcType=INTEGER},
      </if>
      <if test="record.suspectedcount != null">
        suspectedCount = #{record.suspectedcount,jdbcType=INTEGER},
      </if>
      <if test="record.curedcount != null">
        curedCount = #{record.curedcount,jdbcType=INTEGER},
      </if>
      <if test="record.deadcount != null">
        deadCount = #{record.deadcount,jdbcType=INTEGER},
      </if>
      <if test="record.seriouscount != null">
        seriousCount = #{record.seriouscount,jdbcType=INTEGER},
      </if>
      <if test="record.suspectedincr != null">
        suspectedIncr = #{record.suspectedincr,jdbcType=INTEGER},
      </if>
      <if test="record.currentconfirmedincr != null">
        currentConfirmedIncr = #{record.currentconfirmedincr,jdbcType=INTEGER},
      </if>
      <if test="record.confirmedincr != null">
        confirmedIncr = #{record.confirmedincr,jdbcType=INTEGER},
      </if>
      <if test="record.curedincr != null">
        curedIncr = #{record.curedincr,jdbcType=INTEGER},
      </if>
      <if test="record.deadincr != null">
        deadIncr = #{record.deadincr,jdbcType=INTEGER},
      </if>
      <if test="record.seriousincr != null">
        seriousIncr = #{record.seriousincr,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nation
    set id = #{record.id,jdbcType=INTEGER},
      modifyTime = #{record.modifytime,jdbcType=BIGINT},
      currentConfirmedCount = #{record.currentconfirmedcount,jdbcType=INTEGER},
      confirmedCount = #{record.confirmedcount,jdbcType=INTEGER},
      suspectedCount = #{record.suspectedcount,jdbcType=INTEGER},
      curedCount = #{record.curedcount,jdbcType=INTEGER},
      deadCount = #{record.deadcount,jdbcType=INTEGER},
      seriousCount = #{record.seriouscount,jdbcType=INTEGER},
      suspectedIncr = #{record.suspectedincr,jdbcType=INTEGER},
      currentConfirmedIncr = #{record.currentconfirmedincr,jdbcType=INTEGER},
      confirmedIncr = #{record.confirmedincr,jdbcType=INTEGER},
      curedIncr = #{record.curedincr,jdbcType=INTEGER},
      deadIncr = #{record.deadincr,jdbcType=INTEGER},
      seriousIncr = #{record.seriousincr,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.infect.backend.model.NationPO">
    update nation
    <set>
      <if test="modifytime != null">
        modifyTime = #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="currentconfirmedcount != null">
        currentConfirmedCount = #{currentconfirmedcount,jdbcType=INTEGER},
      </if>
      <if test="confirmedcount != null">
        confirmedCount = #{confirmedcount,jdbcType=INTEGER},
      </if>
      <if test="suspectedcount != null">
        suspectedCount = #{suspectedcount,jdbcType=INTEGER},
      </if>
      <if test="curedcount != null">
        curedCount = #{curedcount,jdbcType=INTEGER},
      </if>
      <if test="deadcount != null">
        deadCount = #{deadcount,jdbcType=INTEGER},
      </if>
      <if test="seriouscount != null">
        seriousCount = #{seriouscount,jdbcType=INTEGER},
      </if>
      <if test="suspectedincr != null">
        suspectedIncr = #{suspectedincr,jdbcType=INTEGER},
      </if>
      <if test="currentconfirmedincr != null">
        currentConfirmedIncr = #{currentconfirmedincr,jdbcType=INTEGER},
      </if>
      <if test="confirmedincr != null">
        confirmedIncr = #{confirmedincr,jdbcType=INTEGER},
      </if>
      <if test="curedincr != null">
        curedIncr = #{curedincr,jdbcType=INTEGER},
      </if>
      <if test="deadincr != null">
        deadIncr = #{deadincr,jdbcType=INTEGER},
      </if>
      <if test="seriousincr != null">
        seriousIncr = #{seriousincr,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.infect.backend.model.NationPO">
    update nation
    set modifyTime = #{modifytime,jdbcType=BIGINT},
      currentConfirmedCount = #{currentconfirmedcount,jdbcType=INTEGER},
      confirmedCount = #{confirmedcount,jdbcType=INTEGER},
      suspectedCount = #{suspectedcount,jdbcType=INTEGER},
      curedCount = #{curedcount,jdbcType=INTEGER},
      deadCount = #{deadcount,jdbcType=INTEGER},
      seriousCount = #{seriouscount,jdbcType=INTEGER},
      suspectedIncr = #{suspectedincr,jdbcType=INTEGER},
      currentConfirmedIncr = #{currentconfirmedincr,jdbcType=INTEGER},
      confirmedIncr = #{confirmedincr,jdbcType=INTEGER},
      curedIncr = #{curedincr,jdbcType=INTEGER},
      deadIncr = #{deadincr,jdbcType=INTEGER},
      seriousIncr = #{seriousincr,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="truncate">
    truncate table nation
  </update>
</mapper>
